<?xml version="1.0" encoding="UTF-8"?>
<!--
  This file is part of the Spelling and Grammar Checker project.
  See the accompanying LICENSE file for applicable licenses.
-->
<project name="com.here.validate.svrl.text-rules.xslt" default="run-text-rules">

	<!--
		Ant target to allow direct invocation of the spelling and grammar checker transforms, this means we can use an alternative classpath.
	-->
	<target name="run-text-rules">

		<xmlcatalog id="dita.catalog">
  			<catalogpath path="${dita.dir}/catalog-dita.xml"/>
   		</xmlcatalog>

   		
		<!--
			Define a regex for each type of error checked, this avoids making the
			same request for each  *.dita file checked.
		-->
		<loadfile property="grammar.regex" srcfile="${grammar.txt}" failonerror="false"/>
		<loadfile property="duplicates.regex" srcfile="${duplicates.txt}" failonerror="false"/>
		<loadfile property="spelling.regex" srcfile="${spelling.txt}" failonerror="false"/>
		<loadfile property="punctuation.regex" srcfile="${punctuation.txt}" failonerror="false"/>



		<!--
			Apply the XSLT defined over the root ditamap This create SVRL files from the *.ditamap and fires the associated spelling and grammar checker validator ruleset.

			For efficiency, run XSLT Validation against modified files only, if requested.
		-->
		<xslt  extension=".svrl" style="${dita.plugin.com.here.validate.svrl.text-rules.dir}/xsl/dita2svrl.xsl"  destdir="${dita.temp.dir}/svrl/text-rules" useImplicitFileset="false" failOnError="false"
		 >
		 	
			<xmlcatalog refid="dita.catalog"/>
			<factory name="net.sf.saxon.TransformerFactoryImpl">
				<!--
					Setting several options of Saxon XSLT engine to enable some additional functionality,
					see for more details:
					http://www.saxonica.com/html/documentation/configuration/config-features.html
				-->
				<attribute name="http://saxon.sf.net/feature/allow-external-functions" value="true"/>
				<!-- Enable keeping track of line numbers whilst transforming -->
				<attribute name="http://saxon.sf.net/feature/linenumbering" value="true"/>
				<attribute name="http://saxon.sf.net/feature/sourceParserClass" value="org.apache.xml.resolver.tools.ResolvingXMLReader"/>
				<!-- Disable DTD validation whilst transforming -->
				<attribute name="http://saxon.sf.net/feature/validation" value="false"/>
			</factory>

			<!-- Custom parameters for text-rules -->
			<param name="DICTIONARY_DIR" expression="${text-rules.xml.path.unix}"/>
			<param name="GRAMMAR_REGEX" expression="${grammar.regex}" if="grammar.regex"/>
			<param name="DUPLICATES_REGEX" expression="${duplicates.regex}" if="duplicates.regex" />
			<param name="SPELLING_REGEX" expression="${spelling.regex}" if="spelling.regex" />
			<param name="PUNCTUATION_REGEX" expression="${punctuation.regex}" if="punctuation.regex" />
			<param name="DEFAULTLANG" expression="${document.language}" if="document.language" />
			<param name="AUTO_CORRECT" expression="${text-rules.auto-correct}" if="text-rules.auto-correct"/>

			<!-- Parameters for the textual-rules template from the base plug-in -->
			<param name="BLACKLIST" expression="${args.validate.blacklist}"/>
			<param name="CHECK_CASE" expression="${args.validate.check.case}"/>
			<!-- Common parameters for the schematron template from the base plug-in -->
			<param name="SOURCE" expression="${dita.temp.dir}/dita"/>
			<param name="OUTPUT_RULE-ID" expression="${com.here.validate.svrl.output.rule-id}"/>
			<param name="IGNORE_RULES" expression="${args.validate.ignore.rules}"/>
			<param name="FATAL_RULESET" expression="${text-rules.fatal}"/>
			<param name="ERROR_RULESET" expression="${text-rules.error}"/>
			<param name="WARNING_RULESET" expression="${text-rules.warning}"/>
			<fileset dir="${dita.temp.dir}/dita">
				<include name="**/*.dita"/>
				<modified update="true">
					<param name="cache.cachefile" value="${args.validate.cachefile}"/>
				</modified>
			</fileset>
		</xslt>
	</target>
</project>